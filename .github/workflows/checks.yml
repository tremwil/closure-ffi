name: Checks
on:
  push:
    branches: [dev]
  pull_request:
    branches-ignore: [master]

jobs:
  fmt:
    name: cargo fmt
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - run: rustup component add --toolchain nightly-x86_64-unknown-linux-gnu rustfmt
      - run: cargo +nightly fmt --check

  check:
    name: cargo clippy
    strategy:
      fail-fast: false
      matrix:
        features:
          - --no-default-features
          - --no-default-features -F no_std
          - --no-default-features -F custom_jit_alloc,no_std
          - -F full
          - -F full,no_std
          - -F full,tuple_trait,c_variadic
        include:
          - setup: ""
          - features: -F full,tuple_trait,c_variadic
            setup: |
              rustup toolchain install nightly
              rustup default nightly
              rustup component add --toolchain nightly clippy


    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: ${{ matrix.setup }}
      - run: cargo clippy --workspace --all-targets ${{ matrix.features }}

  doc:
    name: cargo doc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: RUSTFLAGS="--cfg docsrs" cargo +nightly doc -F full

  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        profile:
          - dev
          - release
        target:
          - runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
          - runner: macos-13
            target: x86_64-apple-darwin
          - runner: windows-latest
            target: i686-pc-windows-msvc
          - runner: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
          - runner: macos-latest
            target: aarch64-apple-darwin
    
    needs: [fmt, check] # don't bother running tests if cargo check/fmt doesn't pass
    runs-on: ${{ matrix.target.runner }}
    steps:
      - uses: actions/checkout@v4
      - run: rustup target add ${{ matrix.target.target }}
      - name: Full feature set build and test
        run: cargo test --target ${{ matrix.target.target }} --profile ${{ matrix.profile }} -F full
      - run: cargo clean
      - name: Custom JIT alloc build and test
        run: cargo test --target ${{ matrix.target.target }} --profile ${{ matrix.profile }} --no-default-features -F custom_jit_alloc
  
  all_checks_pass:
    needs:
      - fmt
      - check
      - doc
      - build_and_test
    runs-on: ubuntu-latest
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}