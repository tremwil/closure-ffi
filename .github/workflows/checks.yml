on:
  push:
  pull_request:

jobs:
  fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup component add --toolchain nightly-x86_64-unknown-linux-gnu rustfmt
      - run: cargo +nightly fmt --check

  check:
    name: cargo check
    strategy:
      fail-fast: false
      matrix:
        features:
          - --no-default-features
          - --no-default-features -F no_std
          - -F full no_std

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cargo check --workspace ${{ matrix.features }}

  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        profile:
          - dev
          - release
        runner:
          - ubuntu-latest # x86_64-unknown-linux-gnu
          - windows-latest # x86_64-pc-windows-msvc
          - macos-latest # aarch64-apple-darwin
          - ubuntu-24.04-arm # aarch64-unknown-linux-gnu
          - macos-13 # x86_64-apple-darwin
    
    needs: [fmt, check] # don't bother running tests if cargo check/fmt doesn't pass
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
      - run: cargo build --profile ${{ matrix.profile }} -F full
      - run: cargo test --profile ${{ matrix.profile }} -F full

  build_and_test_i686_windows:
    strategy:
      fail-fast: false
      matrix:
        profile:
          - dev
          - release
    runs-on: windows-latest

    needs: [fmt, check]
    steps:
      - uses: actions/checkout@v4
      - run: rustup target add i686-pc-windows-msvc
      - run: cargo build --target i686-pc-windows-msvc --profile ${{ matrix.profile }} --no-default-features
      - run: cargo test --target i686-pc-windows-msvc --profile ${{ matrix.profile }} --no-default-features