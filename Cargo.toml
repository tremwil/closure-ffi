[workspace]
members = ["proc_macros"]

[workspace.package]
edition = "2021"
authors = ["William Tremblay <tremwil@users.noreply.github.com>"]
keywords = ["closure", "ffi"]
categories = ["development-tools::ffi", "no-std"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/tremwil/closure-ffi"

[package]
name = "closure-ffi"
version = "5.0.0"
description = "FFI utility for creating bare function pointers that invoke a closure"
edition.workspace = true
authors.workspace = true
keywords.workspace = true
categories.workspace = true
license.workspace = true
repository.workspace = true

[[example]]
name = "context_hooking"
crate-type = ["lib"]
test = true

[features]
default = ["std", "default_jit_alloc", "safe_jit"]
std = []
global_jit_alloc = []
# spin is needed on no_std, but not std.
# Sadly there is no way to enable a dependency when a feature is *not* set
default_jit_alloc = ["global_jit_alloc", "dep:jit-allocator2", "dep:spin"]
safe_jit = [
    "dep:iced-x86",
    "dep:capstone"
]
no_safe_jit = []
unstable = []
tuple_trait = ["unstable"]
c_variadic = ["unstable"]
coverage = ["unstable"]
proc_macros = ["dep:closure-ffi-proc-macros"]

[dependencies]
closure-ffi-proc-macros = { path = "proc_macros", version = "6.0.0", optional = true }
jit-allocator2 = {version = "0.2.9", optional = true }
spin = { version = "0.10", optional = true }

[target.'cfg(any(target_arch = "x86", target_arch = "x86_64"))'.dependencies.iced-x86]
version = "1.21"
default-features = false
features = ["no_std", "instr_info", "decoder", "encoder"]
optional = true

[target.'cfg(target_arch = "aarch64")'.dependencies.capstone]
package = "capstone-git"
version = "=0.13.0-commit4ed86fb"
default-features = false
features = ["full", "arch_arm64"]
optional = true

[target.'cfg(target_arch = "arm")'.dependencies.capstone]
package = "capstone-git"
version = "=0.13.0-commit4ed86fb"
default-features = false
features = ["full", "arch_arm"]
optional = true

[target.'cfg(all(target_arch = "arm", target_os = "linux"))'.dependencies]
libc = { version = "0.2", default-features = false }

[build-dependencies]
rustflags = "0.1.7"

[dev-dependencies]
spin = "0.10"
region = "3.0.2"

[target.'cfg(not(all(target_arch = "arm", target_os = "linux")))'.dev-dependencies]
clear-cache = "0.1.1"

[package.metadata.docs.rs]
features = ["proc_macros"]
rustdoc-args = ["--cfg", "docsrs"]

